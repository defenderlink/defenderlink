Game over, you win: scraping with Puppeteer, headless Chrome for node

Why Scrape
 - You need data that isn't available any other way

Evolution of scraping

As time has gone one, pages have become more complex and scraping has evolved

 - Traditional scraping: GET the page, regexs

 - We need to understand the DOM to be able to extract what we want: sending data to JSDom, using Cheerio

 - Web apps need JavaScript to run - PhantomJS and Casper

 - Challenges with PhantomJS and Casper
   - V8 vs JSCore inconsistency
   - JSCore age

 - Why Puppeteer

    - Maintained by Chrome team
    - Uses V8 so relatively close to node
    - Easily 

 - Building a ticket scraping bot
    - Getting concert tickets with Puppeteer

 - Anti scraping
    - Detecing Puppeteer
  
 - Anti anti scraping
    - Patching Puppeteer to look more like a traditonal Chrome environment

Wanted access to data on websites? From single page apps? With captchas? Played with PhantomJS, JSDOM, cheerio, and similar solutions and found them wanting? We’re going to explore Puppeteer: real Chrome, drivable from node and maintained by the Chrome team. It’s the best solution yet for scraping.